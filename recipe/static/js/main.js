document.addEventListener('DOMContentLoaded', function() {
    // Show birth form when Get Started is clicked
    document.getElementById('get-started').addEventListener('click', function() {
        document.getElementById('birth-form').style.display = 'block';
        this.style.display = 'none';
        document.getElementById('birth-form').scrollIntoView({ behavior: 'smooth' });
    });
    
    // Handle form submission
    document.getElementById('horoscope-form').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const birthDate = document.getElementById('birth-date').value;
        const birthTime = document.getElementById('birth-time').value;
        const birthPlace = document.getElementById('birth-place').value;
        const language = document.querySelector('input[name="language"]:checked').value;
        
        // Show loading state
        const submitBtn = this.querySelector('button[type="submit"]');
        submitBtn.disabled = true;
        submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Calculating...';
        
        // Send data to server
        fetch('/get_horoscope', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                birth_date: birthDate,
                birth_time: birthTime,
                birth_place: birthPlace,
                language: language
            })
        })
        .then(response => response.json())
        .then(data => {
            displayResults(data, language);
            submitBtn.disabled = false;
            submitBtn.textContent = 'Generate Horoscope';
        })
        .catch(error => {
            console.error('Error:', error);
            submitBtn.disabled = false;
            submitBtn.textContent = 'Generate Horoscope';
            alert('Error generating horoscope. Please try again.');
        });
    });
});

function displayResults(data, language) {
    const resultsSection = document.getElementById('results-section');
    resultsSection.style.display = 'block';
    resultsSection.innerHTML = '';
    
    // Create results HTML
    let html = `
        <div class="animated fadeIn">
            <h2>Your Cosmic Profile</h2>
            
            <div class="profile-summary">
                <div class="summary-item">
                    <h4>Zodiac Sign</h4>
                    <p>${data.sign}</p>
                </div>
                <div class="summary-item">
                    <h4>Life Path Number</h4>
                    <p>${data.life_path}</p>
                </div>
                <div class="summary-item">
                    <h4>Nakshatra</h4>
                    <p>${data.kundali.nakshatra}</p>
                </div>
                <div class="summary-item">
                    <h4>Lagna</h4>
                    <p>${data.kundali.lagna}</p>
                </div>
            </div>
            
            <h3>Your Kundali</h3>
            <div class="kundali-chart" id="kundali-chart">
                <!-- Kundali houses will be generated by chart.js -->
            </div>
            
            <h3>Planetary Positions</h3>
            <div class="planetary-positions">
                ${Object.entries(data.kundali.planetary_positions).map(([planet, position]) => `
                    <div class="planet-item">
                        <span class="planet-name">${planet}</span>
                        <span class="planet-position">${position}</span>
                    </div>
                `).join('')}
            </div>
            
            <h3>Daily Prediction (${language === 'nepali' ? 'Nepali' : 'English'})</h3>
            <div class="prediction-card">
                <p>${data.predictions.daily[language]}</p>
            </div>
            
            <h3>Monthly Prediction (${language === 'nepali' ? 'Nepali' : 'English'})</h3>
            <div class="prediction-card">
                <p>${data.predictions.monthly[language]}</p>
            </div>
            
            <h3>Your Lucky Day This Month</h3>
            <div class="prediction-card">
                <p>${data.predictions.lucky_day}</p>
            </div>
            
            <button id="chat-with-ai" class="btn-glow">
                <i class="fas fa-robot"></i> Chat with Astro AI
            </button>
        </div>
    `;
    
    resultsSection.innerHTML = html;
    resultsSection.scrollIntoView({ behavior: 'smooth' });
    
    // Initialize kundali chart
    generateKundaliChart(data.kundali);
    
    // Handle chat button click
    document.getElementById('chat-with-ai').addEventListener('click', function() {
        window.location.href = '/chat';
    });
}

// Generate simple kundali chart
function generateKundaliChart(kundaliData) {
    const chartContainer = document.getElementById('kundali-chart');
    if (!chartContainer) return;
    
    // Create 12 houses
    for (let i = 1; i <= 12; i++) {
        const houseDiv = document.createElement('div');
        houseDiv.className = 'kundali-house';
        
        const houseNumber = document.createElement('div');
        houseNumber.className = 'house-number';
        houseNumber.textContent = `House ${i}`;
        
        const houseContent = document.createElement('div');
        houseContent.className = 'house-content';
        
        // For simplicity, just show the lagna in first house
        if (i === 1) {
            houseContent.textContent = `Lagna: ${kundaliData.lagna}`;
        } else {
            // Randomly assign planets to houses for demo
            const planetsInHouse = Object.entries(kundaliData.planetary_positions)
                .filter(([_, position]) => position === kundaliData.rasi_names[(i-1) % 12])
                .map(([planet]) => planet);
            
            if (planetsInHouse.length > 0) {
                houseContent.textContent = planetsInHouse.join(', ');
            } else {
                houseContent.textContent = 'Empty';
            }
        }
        
        houseDiv.appendChild(houseNumber);
        houseDiv.appendChild(houseContent);
        chartContainer.appendChild(houseDiv);
    }
}